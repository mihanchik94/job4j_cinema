package ru.job4j.cinema.repository;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.sql2o.Sql2o;
import ru.job4j.cinema.configuration.DataSourceConfiguration;
import ru.job4j.cinema.model.Film;

import javax.sql.DataSource;
import java.io.IOException;
import java.io.InputStream;
import java.util.Collection;
import java.util.List;
import java.util.Optional;
import java.util.Properties;

import static org.assertj.core.api.Assertions.*;

class Sql2oFilmRepositoryTest {
    static Sql2oFilmRepository sql2oFilmRepository;
    static Collection<Film> expectedFilms;

    @BeforeAll
    public static void initRepository() throws IOException {
        Properties properties = new Properties();
        try (InputStream inputStream = Sql2oFilmRepository.class.getClassLoader().getResourceAsStream("connection.properties")) {
            properties.load(inputStream);
        }
        String url = properties.getProperty("database.url");
        String username = properties.getProperty("database.username");
        String password = properties.getProperty("database.password");

        DataSourceConfiguration configuration = new DataSourceConfiguration();
        DataSource dataSource = configuration.connectionPool(url, username, password);
        Sql2o sql2o = configuration.dataBaseClient(dataSource);

        sql2oFilmRepository = new Sql2oFilmRepository(sql2o);
    }

    @BeforeAll
    public static void fillExpectedFilms() {
        Film film1 = new Film(1, "1+1", "Пострадав в результате несчастного случая, богатый аристократ Филипп нанимает в помощники человека,\n"
                + "который менее всего подходит для этой работы, – молодого жителя предместья Дрисса, только что освободившегося из тюрьмы.\n"
                + "Несмотря на то, что Филипп прикован к инвалидному креслу, Дриссу удается привнести в размеренную жизнь аристократа дух приключений.",
                2011, 1, 16, 112, 1);
        Film film2 = new Film(2, "Двадцать одно", "Карточная игра - комбинация уникальных математических расчетов, превосходных актерских талантов и хладнокровной выдержки.\n"
                + "Карточный игрок - человек особого склада. Молодые люди решили провернуть аферу века и разорить крупнейшие казино страны на астрономическую сумму.\n"
                + "Они решили взять Вегас! Их пятеро. Игра захватила их целиком. Их игра поразила своей виртуозностью. Они изменили ход самой игры.",
                2008, 3, 16, 117, 2);
        Film film3 = new Film(3, "Клик с пультом по жизни", "Архитектору-трудоголику Майклу попадает в руки пульт дистанционного управления,\n"
                + "с помощью которого можно перематывать или ставить на паузу жизненные ситуации. Но техника есть техника - у нее всегда сюрприз в запасе.\n"
                + "Запомнив ускоренные моменты, пульт начинает самовольно перематывать Майклу жизнь.",
                2006, 1, 12, 107, 3);
        Film film4 = new Film(4, "Джентельмены удачи", "Заведующему детсадом Трошкину фатально не повезло: он оказался как две капли воды похож на бандита по кличке «Доцент»,\n"
                + "похитившего уникальный шлем Александра Македонского. Милиция внедряет добряка Трошкина в воровскую среду - и ему ничего не остается, кроме как\n"
                + "старательно изображать своего двойника-злодея, путая всех окружающих. Со временем он настолько блестяще входит в роль, что сам начинает порой приходить в ужас.\n"
                + "Между тем, жизни его угрожает смертельная опасность...",
                1971, 2, 6, 84, 4);
        Film film5 = new Film(5, "Дом который построил Джек", "Америка, 1970-е. За 12 лет блестящей «карьеры» серийному убийце Джеку встречаются назойливая попутчица,\n"
                + "наивная подружка и другие очаровательные в своей глупости жертвы. История пяти убийств, к каждому из которых Джек относится\n"
                + "как к настоящему произведению искусства.",
                2018, 3, 18, 152, 5);
        Film film6 = new Film(6, "Еще по одной", "В ресторане собираются учитель истории, психологии, музыки и физрук, чтобы отметить 40-летие одного из них.\n"
                + "И решают проверить научную теорию о том, что c самого рождения человек страдает от нехватки алкоголя в крови, а чтобы стать по-настоящему счастливым,\n"
                + "нужно быть немного нетрезвым. Друзья договариваются наблюдать, как возлияния скажутся на их работе и личной жизни, и устанавливают правила:\n"
                + "не пить вечером и по выходным. Казалось бы, что может пойти не так?",
                2020, 1, 18, 110, 6);
        Film film7 = new Film(7, "Евротур", "Выпускнику школы Скотту Томасу нужна помощь в изучении немецкого языка, поэтому он знакомится с жителем Германии по имени Майк\n"
                + "и начинает с ним дружескую переписку. Причём Скотт абсолютно уверен, что Майк — это парень, и делится с ним своими переживаниями и проблемами,\n"
                + "которые возникают у него с девушкой. Но в конце концов Скотт узнаёт, что Майк, точнее Мике — это обворожительная блондинка, которой Скотт очень понравился.\n"
                + "И теперь он сделает всё, чтобы увидеться с Мике, даже совершит путешествие по Европе.",
                2004, 2, 16, 90, 7);
        Film film8 = new Film(8, "Форест Гамп", "Сидя на автобусной остановке, Форрест Гамп — не очень умный, но добрый и открытый парень — рассказывает случайным встречным историю\n"
                + "своей необыкновенной жизни. С самого малолетства парень страдал от заболевания ног, соседские мальчишки дразнили его, но в один прекрасный день\n"
                + "Форрест открыл в себе невероятные способности к бегу. Подруга детства Дженни всегда его поддерживала и защищала, но вскоре дороги их разошлись.",
                1994, 1, 16, 142, 8);
        Film film9 = new Film(9, "Кингсман", "Парень Эггси прошел службу в морской пехоте и имеет очень высокий уровень интеллекта. Он мог бы добиться многого, но выбрал другой путь\n"
                + "и стал мелким преступником. Однажды он знакомится с Гарри Хартом, которому его отец когда-то спас жизнь. Этот человек решил сделать все возможное,\n"
                + "чтобы сделать жизнь Эггси лучше и открыть для него новые возможности. Гарри рассказал ему, что является агентом секретной независимой организации,\n"
                + "которая стоит на защите всего мира, и теперь он предлагает парню пройти обучение и стать новым членом их команды.",
                2015, 4, 18, 130, 9);
        Film film10 = new Film(10, "Леон", "Профессиональный убийца Леон неожиданно для себя самого решает помочь 12-летней соседке Матильде, семью которой убили коррумпированные полицейские.",
                1994, 4, 16, 133, 10);
        Film film11 = new Film(11, "Мальчишник в Вегасе", "Они мечтали устроить незабываемый мальчишник в Вегасе. Но теперь им необходимо вспомнить, что именно произошло:\n"
                + "что за ребенок сидит в шкафу номера отеля? Как в ванную попал тигр? Почему у одного из них нет зуба? И, самое главное, куда делся жених?\n"
                + "То, что парни вытворяли на вечеринке, не идет ни в какое сравнение с тем, что им придется сделать на трезвую голову,\n"
                + "когда они будут шаг за шагом восстанавливать события прошлой ночи.",
                2009, 2, 16, 96, 11);
        Film film12 = new Film(12, "Маска", "Скромный и застенчивый служащий банка чувствует себя неуверенно с красивыми девушками и вообще рядом с людьми.\n"
                + "Волей судьбы к нему попадает волшебная маска, и Стенли Ипкис приобретает способность превращаться в неуязвимое мультяшное существо с озорным характером.",
                1994, 2, 12, 101, 12);
        Film film13 = new Film(13, "Зеркала", "Бывший нью-йоркский полицейский устраивается на работу ночным сторожем выгоревших руин крупного универмага.\n"
                + "Обходя обугленные развалины, он начинает замечать что-то зловещее в декоративных зеркалах, украшающих стены:\n"
                + "в огромных мерцающих стёклах отражается что-то жуткое.",
                2008, 5, 18, 110, 13);
        Film film14 = new Film(14, "Мы Миллеры", "Дэвид Кларк — мелкий торговец наркотиками. Среди его клиентов — повара и скучающие домохозяйки.\n"
                + "Детям он наркотики не продаёт и поэтому считает себя принципиальным человеком. Дэвид действительно хорошо относится к детям,\n"
                + "но это не остается безнаказанным — он пытается помочь подросткам, попавшим в беду, и на него нападают хулиганы-панки.\n"
                + "Они отбирают у него наркотики и деньги, и наш герой оказывается в отчаянном положении. Ведь ему нечем расплатиться с его поставщиком Брэдом.\n"
                + "Единственный выход — подрядиться на доставку крупной партии наркотиков через границу…",
                2013, 2, 16, 110, 14);
        Film film15 = new Film(15, "Кошмар на улице Вязов", "Четырём подросткам Спрингвуда снится один и тот же кошмарный сон, в котором за ними гонится и пытается убить человек\n"
                + "с обожжённым лицом в шляпе и с ножами на руке. Когда лучшая подруга старшеклассницы Нэнси умирает во сне ужасной смертью, девушка понимает,\n"
                + "что до неё добрался тот жуткий тип, и он на этом не остановится. Пытаясь выяснить, как ему противостоять, Нэнси всеми силами старается не спать.",
                1984, 5, 18, 92, 15);
        Film film16 = new Film(16, "Сайлент Хилл", "Доктора не могут найти лекарство от таинственного заболевания Шэрон, но её мать Роуз отказывается отдавать ребёнка\n"
                + " в психиатрическую лечебницу. Вместе с дочерью она отправляется в Сайлент Хилл - город, название которого Шэрон постоянно твердит во сне.\n"
                + " Роуз убеждена, что именно здесь она найдёт ответы, в которых так нуждается.",
                2006, 5, 18, 125, 16);
        Film film17 = new Film(17, "Стрингер", "Луи Блум пытается найти работу. После того как он видит, как любительская съемочная группа снимает автомобильную аварию,\n"
                + "он меняет ворованный велосипед на камеру и снимает последствия угона автомобиля, чтобы продать местной телевизионной компании.\n"
                + "Директор новостей Нина покупает запись и убеждает его продолжить работу. Вскоре становится ясно, что ради по-настоящему стоящего материала\n"
                + " Луи не остановится ни перед чем...",
                2013, 3, 18, 118, 17);
        Film film18 = new Film(18, "Роковое число 23", "Сотрудник службы по отлову бездомных животных Уолтер Спэрроу берется за чтение загадочного романа «Номер 23»,\n"
                + "который подарила ему на день рождения его жена Агата. В итоге тихая и спокойная жизнь Уолтера превращается в невыносимые муки, которые могут привести и его,\n"
                + "и близких ему людей к самому печальному концу. А виной всему — число 23. Дело в том, что роман, в котором рассказывается о жутком убийстве,\n"
                + "представляет собой зеркальное отражение жизни самого Уолтера.", 2006, 3, 16, 98, 18);
        Film film19 = new Film(19, "Троя", "1193 год до нашей эры. Парис украл прекрасную Елену, жену царя Спарты Менелая. За честь Менелая вступается его брат – царь Агамемнон.\n"
                + "Его армия под предводительством Ахиллеса подошла к Трое и взяла город в кровавую осаду, длившуюся долгих десять лет… Два мира будут воевать за честь и власть.\n"
                + "Тысячи умрут за славу. И за любовь нация сгорит дотла.",
                2004, 4, 16, 163, 19);
        Film film20 = new Film(20, "В погоне за счастьем", "Крис Гарднер – отец-одиночка. Воспитывая пятилетнего сына, Крис изо всех сил старается сделать так, чтобы ребенок рос счастливым.\n"
                + "Работая продавцом, он не может оплатить квартиру, и их выселяют. Оказавшись на улице, но не желая сдаваться, отец устраивается стажером в брокерскую компанию,\n"
                + "рассчитывая получить должность специалиста. Только на протяжении стажировки он не будет получать никаких денег, а стажировка длится 6 месяцев...",
                2006, 1, 12, 117, 20);
        Film film21 = new Film(21, "Васаби", "Французский полицейский Юбер Фиорентини, исполняя последнюю волю когда-то любимой им женщины, вынужден отправиться в далекую Японию,\n"
                + "где ему приходится встретиться со старым другом и дочерью, о существовании которой он даже не подозревал. А также получить наследство в 200 млн. долларов\n"
                + "и познакомиться с якудза, которые охотятся за этими деньгами.",
                2001, 4, 16, 94, 21);
        expectedFilms = List.of(film1, film2, film3, film4, film5, film6, film7, film8, film9, film10,
                film11, film12, film13, film14, film15, film16, film17, film18, film19, film20, film21);
    }

    @Test
    public void whenFindByIdThenGetFilm() {
        int expectedFilmId = 10;
        Film expectedFilm = new Film(10, "Леон", "Профессиональный убийца Леон неожиданно для себя самого решает помочь " +
                "12-летней соседке Матильде, семью которой убили коррумпированные полицейские.",
                1994, 4, 16, 133, 10);
        Film actualFilm = sql2oFilmRepository.findById(expectedFilmId).get();
        Collection<Film> actualFilms = sql2oFilmRepository.findAll();
        assertThat(actualFilm).usingRecursiveComparison().isEqualTo(expectedFilm);
        assertThat(actualFilms).isEqualTo(expectedFilms);
    }

    @Test
    public void whenFindNonExistedFilmThenEmptyOptional() {
        assertThat(sql2oFilmRepository.findById(73)).isEqualTo(Optional.empty());
    }
}